* set nginx conf to forward to container
* set logging options for db, uwsgi, nginx
** uwsgi: https://uwsgi-docs.readthedocs.io/en/latest/Logging.html
**
**
* rotate logging in docker
** https://success.docker.com/article/how-to-setup-log-rotation-post-installation
** https://medium.freecodecamp.org/how-to-setup-log-rotation-for-a-docker-container-a508093912b2
** https://www.cyberciti.biz/faq/how-to-install-and-configure-log-roate-in-alpine-linux/
* entrypoint setup
** https://medium.freecodecamp.org/docker-entrypoint-cmd-dockerfile-best-practices-abc591c30e21
** https://github.com/mesuutt/docker-uwsgi/blob/master/Dockerfile
* docker compose scripts
** https://blog.codeship.com/orchestrate-containers-for-development-with-docker-compose/
** https://www.linode.com/docs/applications/containers/how-to-use-docker-compose/
* conf files for cloud use
* control docker daemon
** sudo systemctl start docker
* startup dbhost command
** docker run -d --rm --link dbhost -p 80:80 --name usweb agcloud/usnews2
** also need 7070:27017 for database update
* Docker maintenance
** docker image prune
** docker system prune, etc.
* docker-compose up -d
* mongodb in docker
** https://gist.github.com/wesleybliss/29d4cce863f5964a3eb73c42501d99e4
* mongo tools
** https://linuxize.com/post/how-to-install-mongodb-on-ubuntu-18-04/
* Backup/restore strategy
** backup statuses collection only!! to avoid dup key errors
** mongodump --db usnews --gzip --archive=/home/agold/Prog/data-warehouse/us1.tgz
** mongorestore --db usnews --gzip --archive=/warehouse/us1.tgz
* Add display of container tag to website
